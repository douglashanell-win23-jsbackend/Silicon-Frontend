@page "/courses"

@attribute [StreamRendering]
@attribute [Authorize]

<PageTitle>Courses</PageTitle>

<section class="courses">
    <div class="container">
        <div class="header-form">
            <h1>Courses</h1>
            <form id="form-filters">
                <select>
                    <option>All categories</option>
                </select>
                <div class="input-search-group">
                    <input id="searchQuery" name="searchQuery" placeholder="Search Courses" />
                    <i class="fa-regular fa-search"></i>
                </div>
            </form>
        </div>

        <div class="course-items">
            @if (courses == null)
            {
                <p><em>Please wait...</em></p>
            }
            else
            {
                @foreach (var course in courses)
                {
                    <a class="course" asp-action="Details" asp-controller="Courses" asp-route-id="@course.Id">
                        @if (course.IsBestSeller)
                        {
                            <div class="bestseller">Best Seller</div>
                        }

                        <button class="btn btn-circle bookmark"><i class="fa-regular fa-bookmark"></i></button>

                        <img src="~/images/courses/@course.ImageName" alt="@course.Title" />

                        <div class="content">
                            <h5 class="title">@course.Title</h5>
                            <p class="author">By @course.Author</p>
                            <div class="pricing">
                                @if (!string.IsNullOrEmpty(course.DiscountPrice) && course.DiscountPrice != "0.00")
                                {
                                    <div class="discount">@course.DiscountPrice</div>
                                }

                                <div class="price" @(!string.IsNullOrEmpty(course.DiscountPrice)? "discount-enabled" : "" )>@course.OriginalPrice</div>
                            </div>
                            <div class="footer">
                                <div class="hours">
                                    <i class="fa-regular fa-clock"></i> @course.Hours hours
                                </div>
                                <div class="likes">
                                    <i class="fa-regular fa-thumbs-up"></i> @course.LikesInProcent (@course.LikesInNumber)
                                </div>
                            </div>
                        </div>
                    </a>
                }
            }
        </div>
    </div>
</section>
@code {
    private CourseModel[]? courses;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            courses = await Http.GetFromJsonAsync<CourseModel[]>("courseprovider-win23jsbackend-douglashanell.azurewebsites.net/api/courses");
        }
        catch (Exception ex){}
    }

    private class CourseModel
    {
        public string Id { get; set; } = Guid.NewGuid().ToString();
        public string Title { get; set; } = null!;
        public string? ImageName { get; set; }
        public string? Author { get; set; }
        public bool IsBestSeller { get; set; }
        public int Hours { get; set; }
        public string? OriginalPrice { get; set; }
        public string? DiscountPrice { get; set; }
        public decimal LikesInProcent { get; set; }
        public decimal LikesInNumber { get; set; }
    }
}