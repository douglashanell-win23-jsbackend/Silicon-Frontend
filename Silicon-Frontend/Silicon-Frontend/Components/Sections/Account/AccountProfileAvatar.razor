@attribute [StreamRendering]

@using System.Net.Http.Headers
@using Silicon_Frontend.Components.Layout



@if (user == null)
{
    <p>Loading...</p>
}
else
{
    <section class="account-profile">
        <div class="profile">
            <div class="profile-image">
                <img src="/images/uploads/profiles/@user.ProfileImage" alt="@user.FirstName @user.LastName" />

                <EditForm FormName="fileUpload" Model="FileUploadForm" OnSubmit="HandleSubmit">
                    <DataAnnotationsValidator />
                    <InputFile id="fileUploader" @bind-Value="FileUploadForm.UploadedFile" accept="image/*" />
                    <button type="submit" class="btn btn-primary">Upload</button>
                </EditForm>
                @if (!string.IsNullOrEmpty(uploadMessage))
                {
                    <p>@uploadMessage</p>
                }
            </div>
            <div class="profile-info">
                <h3 class="displayname">@user.FirstName @user.LastName</h3>
                <p>@user.Email</p>
            </div>
            <ManageNavMenu />
        </div>
    </section>
}

@code {
    [CascadingParameter]
    public ApplicationUser user { get; set; } = default!;

    public FileUploadModel FileUploadForm { get; set; } = new FileUploadModel();

    public string uploadMessage = "";

    public async Task HandleSubmit()
    {
        try
        {
            if (FileUploadForm.UploadedFile != null)
            {
                if (!string.IsNullOrEmpty(FileUploadForm.UploadedFile.FileName))
                {
                    using var formData = new MultipartFormDataContent();
                    formData.Add(new StreamContent(FileUploadForm.UploadedFile.OpenReadStream()), "file", FileUploadForm.UploadedFile.Name);

                    var containerName = "upload";
                    var url = $"https://fileprovider-silicon-d.azurewebsites.net/api/Upload?code=vE0RxHxDA6G3alaQvozf4QjwcWsu41N1AxXUZb7kilQpAzFucvaCVQ%3D%3D&containerName={containerName}";

                    using var client = new HttpClient();
                    var response = await client.PostAsync(url, formData);

                    if (response.IsSuccessStatusCode)
                    {
                        uploadMessage = "Upload successful";
                    }
                    else
                    {
                        uploadMessage = "Upload failed";
                    }
                }
                else
                {
                    uploadMessage = "File name is empty. Please select a file.";
                }
            }
            else
            {
                uploadMessage = "No File Selected.";
            }

        }
    
        catch (Exception ex)
        {
            uploadMessage = $"Error: {ex.Message}";
        }
    }

    public class FileUploadModel
    {
        public IFormFile? UploadedFile { get; set; }
    }
}

